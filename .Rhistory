flw.no<- as.matrix(flw.no)
flw.no<- as.vector(flw.no)
flw.no<- as.data.frame(flw.no)
# Reshape into long-format matrix
long<- reshape(tube, timevar="Pos", idvar=c("array_plant"), direction = "wide") # ignore warnings
long$array_plant<- NULL
long<- as.matrix(long)
tube.length<-long
# functional regression: seeds vs f(ube.length) and offset=flower number
# fit model with poisson distribution
fit.1<- pfr(seeds ~ lf.vd(tube.length, vd=unlist(flw.no), basistype = "te", transform='standardized')
,family='poisson')
summary(fit.1)
# fit model with negative binomial distribution
fit.2<- pfr(seeds ~ lf.vd(tube.length, , vd=unlist(flw.no), basistype = "te", transform='standardized')
, offset=unlist(flw.no) ,  family='nb')
summary(fit.2)
AIC(fit.1, fit.2)# negative binomial better
fit.coef<- coef(fit.2)   #Note: are these transformed?
#write.table(fit.coef, file="tube_length_plot_data.csv",sep = ",", row.names = F)
#make absolute frstart date
fit.coef$x<- fit.coef$tube.length.arg * fit.coef$tube.length.vd
plot(fit.coef$x, fit.coef$value, type="l", main="absolute")
plot(fit.coef$tube.length.arg, fit.coef$value, type="l", main="relative")
#NB: pathway is for MK's home computer
dat<- read.csv("C:/Users/mason/Dropbox/git/students/Oliver Noseworthy/Data/data2.csv")
library(refund)
dat$array_plant<- as.factor(dat$array_plant)
dat$Array<- as.factor(dat$Array)
dat$Pos<- as.factor(dat$Pos)
table(is.na(dat$tube.l))# no missing values in tube.l
table(is.na(dat$flw.d)) #no missing values in flw.d
# tube length and flower diameter separation
tube<- dat[c("array_plant","Pos", "tube.l")]
flw.d<- dat[c("array_plant","Pos", "flw.d")]
# total seeds and fruits across all plants
seeds<- aggregate(dat$seeds, by=list(dat$array_plant), sum)
seeds$Group.1<- NULL
head(seeds)
flw.no<- aggregate(as.numeric(dat$Pos), by=list(dat$array_plant), max)
flw.no$Group.1<-NULL
head(flw.no)
flw.no<- as.matrix(flw.no)
flw.no<- as.vector(flw.no)
flw.no<- as.data.frame(flw.no)
# Reshape into long-format matrix
long<- reshape(tube, timevar="Pos", idvar=c("array_plant"), direction = "wide") # ignore warnings
long$array_plant<- NULL
long<- as.matrix(long)
tube.length<-long
# functional regression: seeds vs f(ube.length) and offset=flower number
# fit model with poisson distribution
fit.1<- pfr(seeds ~ lf.vd(tube.length, vd=unlist(flw.no), basistype = "te", transform='standardized')
,family='poisson')
summary(fit.1)
# fit model with negative binomial distribution
fit.2<- pfr(seeds ~ lf.vd(tube.length, , vd=unlist(flw.no), basistype = "te", transform='standardized')
, offset=unlist(flw.no) ,  family='nb')
summary(fit.2)
#NB: pathway is for MK's home computer
dat<- read.csv("C:/Users/mason/Dropbox/git/students/Oliver Noseworthy/Data/data2.csv")
library(refund)
dat$array_plant<- as.factor(dat$array_plant)
dat$Array<- as.factor(dat$Array)
dat$Pos<- as.factor(dat$Pos)
table(is.na(dat$tube.l))# no missing values in tube.l
table(is.na(dat$flw.d)) #no missing values in flw.d
# tube length and flower diameter separation
tube<- dat[c("array_plant","Pos", "tube.l")]
flw.d<- dat[c("array_plant","Pos", "flw.d")]
# total seeds and fruits across all plants
seeds<- aggregate(dat$seeds, by=list(dat$array_plant), sum)
seeds$Group.1<- NULL
head(seeds)
flw.no<- aggregate(as.numeric(dat$Pos), by=list(dat$array_plant), max)
flw.no$Group.1<-NULL
head(flw.no)
flw.no<- as.matrix(flw.no)
flw.no<- as.vector(flw.no)
flw.no<- as.data.frame(flw.no)
# Reshape into long-format matrix
long<- reshape(tube, timevar="Pos", idvar=c("array_plant"), direction = "wide") # ignore warnings
long$array_plant<- NULL
long<- as.matrix(long)
tube.length<-long
# functional regression: seeds vs f(ube.length) and offset=flower number
# fit model with poisson distribution
fit.1<- pfr(seeds ~ lf.vd(tube.length, vd=unlist(flw.no), basistype = "te", transform='standardized')
,family='poisson')
summary(fit.1)
# fit model with negative binomial distribution
fit.2<- pfr(seeds ~ lf.vd(tube.length, , vd=unlist(flw.no), basistype = "te", transform='standardized')
, offset=unlist(flw.no) ,  family='nb')
summary(fit.2)
names(dat)
head(dat)
# Reshape into long-format matrix
long<- reshape(flw.d, timevar="Pos", idvar=c("array_plant"), direction = "wide") # ignore warnings
long$array_plant<- NULL
long<- as.matrix(long)
flower.diameter<-long
# fit model with poisson distribution
fit.1<- pfr(seeds ~ lf.vd(flower.diameter, vd=unlist(flw.no), basistype = "te", transform='standardized')
,family='poisson')
summary(fit.1)
# fit model with negative binomial distribution
fit.2<- pfr(seeds ~ lf.vd(flower.diameter, , vd=unlist(flw.no), basistype = "te", transform='standardized')
, offset=unlist(flw.no) ,  family='nb')
summary(fit.2)
AIC(fit.1, fit.2)# negative binomial better
fit.2<- pfr(seeds ~ lf.vd(tube.length, , vd=unlist(flw.no), basistype = "te", transform='standardized')
, offset=unlist(flw.no) ,  family='nb')
summary(fit.2)
fit.2
# fit model with negative binomial distribution
fit.2<- pfr(seeds ~ lf.vd(flower.diameter, , vd=unlist(flw.no), basistype = "te", transform='standardized')
, offset=unlist(flw.no) ,  family='nb')
summary(fit.2)
d<- c(100, 77.5, 90, 90, 100, 97.5,
80, 97.5, 97.5, 70, 100, 50, 90,
92.5, 105, 52.5, 97.5, 100,
102.5, 97.5, 95, 100, 85, 85
72.5)
d<- c(100, 77.5, 90, 90, 100, 97.5,
80, 97.5, 97.5, 70, 100, 50, 90,
92.5, 105, 52.5, 97.5, 100,
102.5, 97.5, 95, 100, 85, 85,
72.5)
length(d)
hist(d,
main = "Quiz #3 Grade (%) Distribution"
xlab= "Grade (%)",
hist(d,
main = "Quiz #3 Grade (%) Distribution",
xlab= "Grade (%)",
col= "goldenrod4")
mean(d)
median(d)
sd(d)
IQR(d, type = 2)
#NB: pathway is for MK's home computer
dat<- read.csv("C:/Users/mason/Dropbox/git/students/Oliver Noseworthy/Data/data2.csv")
head(dat)
# Load necessary packages
library(mgcv)
library(ggplot2)
library(dplyr)
head(dat)
# Fit B-splines using Generalized Additive Models (GAM)
model <- gam(tube.l ~ s(Pos, bs = "bs", k = 5) +
s(PlantID, bs = "re"),
data = dat, method = "REML")
# Fit B-splines using Generalized Additive Models (GAM)
model <- gam(tube.l ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re"),
data = dat, method = "REML")
# Generate prediction data
new_data <- expand.grid(FlowerPosition = seq(min(dat$Pos), max(dat$Pos), length.out = 100),
PlantID = unique(data$plantID))
# Generate prediction data
new_data <- expand.grid(Position = seq(min(dat$Pos), max(dat$Pos), length.out = 100),
plantID = unique(data$plantID))
attach(dat)
# Generate prediction data
new_data <- expand.grid(Position = seq(min(Pos), max(Pos), length.out = 100),
plantID = unique(plantID))
new_data$PredictedTrait <- predict(model, new_data, exclude = "s(plantID)")
names(dat)
# Generate prediction data
new_data <- expand.grid(Position = seq(min(Pos), max(Pos), length.out = 100),
plantID = unique(array_plant))
new_data$PredictedTrait <- predict(model, new_data, exclude = "s(plantID)")
# Plot: Mean B-Spline Fit Across Multiple Individuals
ggplot(new_data, aes(x = FlowerPosition, y = PredictedTrait)) +
geom_line(size = 1, color = "blue") +
geom_point(data = data, aes(x = FlowerPosition, y = TraitValue), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation within Plants",
x = "Flower Position",
y = "Predicted Trait Value")
# Individual fits by plant
ggplot(data, aes(x = FlowerPosition, y = TraitValue, group = PlantID, color = as.factor(PlantID))) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Within-Plant Floral Variation (B-Spline Fits)",
x = "Flower Position",
y = "Trait Value",
color = "Plant ID")
?expand.grid
names(dat)
# Fit B-splines using Generalized Additive Models (GAM) for tube length
model_tube <- gam(tube.l ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re") + s(Branch, bs = "re"),
data = dat, method = "REML")
# Fit B-splines for flower diameter
model_flw <- gam(flw.d ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re") + s(Branch, bs = "re"),
data = data, method = "REML")
# Fit B-splines for flower diameter
model_flw <- gam(flw.d ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re") + s(Branch, bs = "re"),
data = dat, method = "REML")
# Generate prediction data
new_data <- expand.grid(PosArray = seq(min(dat$Pos), max(dat$Pos), length.out = 100),
plantID = unique(dat$plantID),
Branch = unique(dat$Branch))
# Plot: Mean B-Spline Fit Across Multiple Individuals
ggplot(new_data, aes(x = FlowerPosition, y = PredictedTrait)) +
geom_line(size = 1, color = "blue") +
geom_point(data = data, aes(x = FlowerPosition, y = TraitValue), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation within Plants",
x = "Flower Position",
y = "Predicted Trait Value")
# Individual fits by plant
ggplot(data, aes(x = FlowerPosition, y = TraitValue, group = PlantID, color = as.factor(PlantID))) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Within-Plant Floral Variation (B-Spline Fits)",
x = "Flower Position",
y = "Trait Value",
color = "Plant ID")
head(new_data)
# Generate prediction data
new_data <- expand.grid(Pos = seq(min(dat$Pos), max(dat$Pos), length.out = 100),
plantID = unique(dat$plantID),
Branch = unique(dat$Branch))
# Plot: Mean B-Spline Fit Across Multiple Individuals
ggplot(new_data, aes(x = Flower Position, y = PredictedTrait)) +
# Plot: Mean B-Spline Fit Across Multiple Individuals
ggplot(new_data, aes(x = Pos, y = PredictedTrait)) +
geom_line(size = 1, color = "blue") +
geom_point(data = dat, aes(x = FlowerPosition, y = TraitValue), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation within Plants",
x = "Flower Position",
y = "Predicted Trait Value")
# Plot: Mean B-Spline Fit Across Multiple Individuals
ggplot(new_data, aes(x = Pos, y = PosArray)) +
geom_line(size = 1, color = "blue") +
geom_point(data = dat, aes(x = FlowerPosition, y = TraitValue), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation within Plants",
x = "Flower Position",
y = "Predicted Trait Value")
new_data$PredictedTube <- predict(model_tube, new_data, exclude = c("s(plantID)", "s(Branch)"))
new_data$PredictedFlw <- predict(model_flw, new_data, exclude = c("s(plantID)", "s(Branch)"))
# Plot: Mean B-Spline Fit for Tube Length
p1 <- ggplot(new_data, aes(x = PosArray, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
geom_point(data = data, aes(x = PosArray, y = tube.l), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Tube Length",
x = "Flower Position in Array",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Flower Diameter
p2 <- ggplot(new_data, aes(x = PosArray, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
geom_point(data = data, aes(x = PosArray, y = flw.d), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
# Individual fits by plant for tube length
p3 <- ggplot(data, aes(x = PosArray, y = tube.l, group = plantID, color = as.factor(plantID))) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Within-Plant Floral Variation (Tube Length)",
x = "Flower Position in Array",
y = "Tube Length",
color = "Plant ID")
# Print plots
print(p1)
# Plot: Mean B-Spline Fit for Tube Length
ggplot(new_data, aes(x = PosArray, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
geom_point(data = data, aes(x = PosArray, y = tube.l), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Tube Length",
x = "Flower Position in Array",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Tube Length
ggplot(new_data, aes(x = PosArray, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
geom_point(data = dat, aes(x = PosArray, y = tube.l), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Tube Length",
x = "Flower Position in Array",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Tube Length
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
geom_point(data = dat, aes(x = Pos, y = tube.l), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Tube Length",
x = "Flower Position in Array",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Flower Diameter
ggplot(new_data, aes(x = Pos, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
geom_point(data = data, aes(x = Pos, y = flw.d), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
# Plot: Mean B-Spline Fit for Flower Diameter
ggplot(new_data, aes(x = Pos, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
geom_point(data = dat, aes(x = Pos, y = flw.d), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
# Individual fits by plant for tube length
ggplot(data, aes(x = Pos, y = tube.l, group = plantID, color = as.factor(plantID))) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Within-Plant Floral Variation (Tube Length)",
x = "Flower Position in Array",
y = "Tube Length",
color = "Plant ID")
# Individual fits by plant for tube length
ggplot(dat, aes(x = Pos, y = tube.l, group = plantID, color = as.factor(plantID))) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Within-Plant Floral Variation (Tube Length)",
x = "Flower Position in Array",
y = "Tube Length",
color = "Plant ID")
#NB: pathway is for MK's home computer
dat<- read.csv("C:/Users/mason/Dropbox/git/students/Oliver Noseworthy/Data/data2.csv")
head(dat)
attach(dat)
# Load necessary packages
library(mgcv)
library(ggplot2)
library(dplyr)
# Fit B-splines using Generalized Additive Models (GAM) for tube length
model_tube <- gam(tube.l ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re") + s(Branch, bs = "re"),
data = dat, method = "REML")
# Fit B-splines for flower diameter
model_flw <- gam(flw.d ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re") + s(Branch, bs = "re"),
data = dat, method = "REML")
# Generate prediction data
new_data <- expand.grid(Pos = seq(min(dat$Pos), max(dat$Pos), length.out = 100),
plantID = unique(dat$plantID),
Branch = unique(dat$Branch))
new_data$PredictedTube <- predict(model_tube, new_data, exclude = c("s(plantID)", "s(Branch)"))
new_data$PredictedFlw <- predict(model_flw, new_data, exclude = c("s(plantID)", "s(Branch)"))
# Plot: Mean B-Spline Fit for Tube Length
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
geom_point(data = dat, aes(x = Pos, y = tube.l), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Tube Length",
x = "Flower Position in Array",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Flower Diameter
ggplot(new_data, aes(x = Pos, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
geom_point(data = dat, aes(x = Pos, y = flw.d), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
# Individual fits by plant for tube length
ggplot(dat, aes(x = Pos, y = tube.l, group = plantID, color = as.factor(plantID))) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Within-Plant Floral Variation (Tube Length)",
x = "Flower Position in Array",
y = "Tube Length",
color = "Plant ID")
# Plot: Mean B-Spline Fit for Tube Length
p1 <- ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Flower Diameter
ggplot(new_data, aes(x = PosArray, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
# Plot: Mean B-Spline Fit for Flower Diameter
ggplot(new_data, aes(x = Pos, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 8), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 20), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 3), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 4), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = knots), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
PredictedTube
head(new_data)
summary(model_tube)
# Fit B-splines using Generalized Additive Models (GAM) for tube length
model_tube <- gam(tube.l ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re"),
data = dat, method = "REML")
summary(model_tube)
# Fit B-splines for flower diameter
model_flw <- gam(flw.d ~ s(Pos, bs = "bs", k = 5) +
s(plantID, bs = "re"),
data = dat, method = "REML")
# Generate prediction data
new_data <- expand.grid(Pos = seq(min(dat$Pos), max(dat$Pos), length.out = 100),
plantID = unique(dat$plantID),
Branch = unique(dat$Branch))
# Generate prediction data
new_data <- expand.grid(Pos = seq(min(dat$Pos), max(dat$Pos), length.out = 100),
plantID = unique(dat$plantID))
new_data$PredictedTube <- predict(model_tube, new_data, exclude = c("s(plantID)", "s(Branch)"))
new_data$PredictedFlw <- predict(model_flw, new_data, exclude = c("s(plantID)", "s(Branch)"))
# Plot: Mean B-Spline Fit for Tube Length
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_line(size = 1, color = "blue") +
geom_point(data = dat, aes(x = Pos, y = tube.l), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Tube Length",
x = "Flower Position in Array",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Flower Diameter
ggplot(new_data, aes(x = Pos, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
geom_point(data = dat, aes(x = Pos, y = flw.d), alpha = 0.3) +
theme_minimal() +
labs(title = "Systematic Floral Variation: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
# Individual fits by plant for tube length
ggplot(dat, aes(x = Pos, y = tube.l, group = plantID, color = as.factor(plantID))) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Within-Plant Floral Variation (Tube Length)",
x = "Flower Position in Array",
y = "Tube Length",
color = "Plant ID")
ggplot(new_data, aes(x = Pos, y = PredictedTube)) +
geom_smooth(method = "gam", formula = y ~ s(x, bs = "bs", k = 5), se = FALSE) +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Tube Length",
x = "Flower Position",
y = "Predicted Tube Length")
# Plot: Mean B-Spline Fit for Flower Diameter
ggplot(new_data, aes(x = Pos, y = PredictedFlw)) +
geom_line(size = 1, color = "red") +
theme_minimal() +
labs(title = "Mean B-Spline Fit: Flower Diameter",
x = "Flower Position in Array",
y = "Predicted Flower Diameter")
#home computer
setwd("C:/Users/mason/Dropbox/git/Vicia/")
data<- read.csv("vicia_final_data.csv")
b_seeds<- aggregate(data$seeds, by=list(data$PlantID), mean)
b_seeds
b_seeds<- aggregate(data$seeds, by=list(data$Branch), mean)
b_seeds
plot(b_seeds$Group.1, b_seeds$x, type = "lty")
barplot(b_seeds)
barplot(b_seeds$Group.1, b_seeds$x)
