mean_FD = mean(FD, na.rm = TRUE),
sd_FD = sd(FD, na.rm = TRUE),
var_FD = var(FD, na.rm = TRUE),
mean_B = mean(B, na.rm = TRUE),
sd_B = sd(B, na.rm = TRUE),
var_B = var(B, na.rm = TRUE),
mean_flw_vol = mean(flw_vol, na.rm = TRUE),
sd_flw_vol = sd(flw_vol, na.rm = TRUE),
var_flw_vol = var(flw_vol, na.rm = TRUE),
.groups = "drop"
)
mn<- as.data.frame(means.ind)
# summarize just by flower date, not by plant
means.date <- data %>%
group_by(flw_date) %>%
summarise(
mean_FL = mean(FL, na.rm = TRUE),
sd_FL = sd(FL, na.rm = TRUE),
var_FL = var(FL, na.rm = TRUE),
mean_FD = mean(FD, na.rm = TRUE),
sd_FD = sd(FD, na.rm = TRUE),
var_FD = var(FD, na.rm = TRUE),
mean_B = mean(B, na.rm = TRUE),
sd_B = sd(B, na.rm = TRUE),
var_B = var(B, na.rm = TRUE),
mean_flw_vol = mean(flw_vol, na.rm = TRUE),
sd_flw_vol = sd(flw_vol, na.rm = TRUE),
var_flw_vol = var(flw_vol, na.rm = TRUE),
.groups = "drop"
)
md<- as.data.frame(means.date)
#maximum seed set per plant
seed<- aggregate(data$seeds, by=list(data$PlantID), sum)
seed$Group.1<- NULL
#calcualte total flower number
flw.no<- aggregate(data$PosSeq, by=list(data$PlantID), max)
flw.no$Group.1<- NULL
#calculate total branch number
branch.no<- aggregate(data$Branch, by=list(data$PlantID), max)
branch.no$Group.1<- NULL
# Prepare functional predictors
B<- mn[c("PlantID","flw_date", "mean_B")]
FL<- mn[c("PlantID","flw_date", "mean_FL")]
FD<- mn[c("PlantID","flw_date", "mean_FD")]
# Reshape into long-format matrix
long<- reshape(B, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
banner<-long
# Reshape into long-format matrix
long<- reshape(FL, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
fl<-long
# Reshape into long-format matrix
long<- reshape(FD, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
fd<-long
# set up variable domain:
# 'flw_date' -> day of flowering season (1-18)
flw_day<- aggregate(mn$flw_date, by=list(mn$PlantID), max)
flw_day$Group.1<- NULL
flw_day<- as.matrix(flw_day)
flw_day<- as.vector(flw_day)
#load Refund - .
library(refund)
# try sd as a single (i.e., plant-level) covariate
sd.b.cov<- aggregate(data$B, by=list(data$PlantID), sd)
sd.b.cov$Group.1<- NULL
# If both means and SDs vary a lot, especially due to unequal sampling or units â†’ prefer "standardize"
fit<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='ziP')
fit.1<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp")
+ unlist(flw.no),family='poisson')
fit.1b<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+ unlist(flw.no),family='poisson')
fit.1.1<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day)) + unlist(sd.b.cov) + unlist(flw.no),family='ziP')
fit.2<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day),basistype = "s", bs = "tp", transform = "standardized")
+ unlist(flw.no) + unlist(branch.no),family='ziP')
fit.3<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day),basistype = "s", bs = "tp", transform = "standardized")
+ unlist(flw.no) + unlist(branch.no) + unlist(flw.no):unlist(branch.no),family='ziP')
summary(fit)
summary(fit.1)
summary(fit.1.1)
summary(fit.1b)
summary(fit.2)
summary(fit.3)
#maximum seed set per plant
seed<- aggregate(data$seeds, by=list(data$PlantID), sum)
seed$Group.1<- NULL
#calcualte total flower number
flw.no<- aggregate(data$PosSeq, by=list(data$PlantID), max)
flw.no$Group.1<- NULL
#calculate total branch number
branch.no<- aggregate(data$Branch, by=list(data$PlantID), max)
branch.no$Group.1<- NULL
# Prepare functional predictors
B<- mn[c("PlantID","flw_date", "mean_B")]
FL<- mn[c("PlantID","flw_date", "mean_FL")]
FD<- mn[c("PlantID","flw_date", "mean_FD")]
# Reshape into long-format matrix
long<- reshape(B, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
banner<-long
# Reshape into long-format matrix
long<- reshape(FL, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
fl<-long
# Reshape into long-format matrix
long<- reshape(FD, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
fd<-long
# set up variable domain:
# 'flw_date' -> day of flowering season (1-18)
flw_day<- aggregate(mn$flw_date, by=list(mn$PlantID), max)
flw_day$Group.1<- NULL
flw_day<- as.matrix(flw_day)
flw_day<- as.vector(flw_day)
# try sd as a single (i.e., plant-level) covariate
sd.b.cov<- aggregate(data$B, by=list(data$PlantID), sd)
sd.b.cov$Group.1<- NULL
# Prepare functional predictors
B.sd<- mn[c("PlantID","flw_date", "sd_B")]
# Reshape into long-format matrix
long<- reshape(B.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
sd.banner<-long
fit<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + sd.b.cov
,family='ziP')
banner.stdev<- unlist(sd.b.cov)
fit<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + banner.stdev
,family='ziP')
fit<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
,family='ziP')
fit.1<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
fit.2<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
,family='poisson')
fit.3<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") +
lf.vd(sd.banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
AIC(fit.1, fit.2, fit.3)
fit.2.1<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov) +unlist(flw.no)
,family='poisson')
fit.2.2<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(flw.no) + unlist(branch.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2)
summary(fit.2)
fit.2<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
,family='poisson')
fit.2.1<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov) +unlist(flw.no)
,family='poisson')
fit.2.2<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(flw.no) + unlist(branch.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2)
summary(fit.2.1)
fit.2.3<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no) + unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3)
fit.2<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
,family='poisson')
fit.2.1<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov) +unlist(flw.no)
,family='poisson')
fit.2.2<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no)
,family='poisson')
fit.2.3<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no) + unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3)
summary(fit.2.2)
summary(fit.2.3)
fit.2.4<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
summary(fit.2.4)
fit<- coef(fit.2.4)
fit$x<- fit$banner.arg * fit$banner.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$banner.arg, fit$value, type="l", main="relative")
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$banner.arg, fit$value, type="l", main="relative")
head(md)
cor.test(md$mean_B, md$sd_B)
plot(md$mean_B, md$sd_B)
#######################
#######################
##### Flower Length####
#######################
# try sd as a single (i.e., plant-level) covariate
sd.fl.cov<- aggregate(data$B, by=list(data$PlantID), sd)
sd.fl.cov$Group.1<- NULL
fl.stdev<- unlist(sd.b.cov)
# Prepare functional predictors
fl.sd<- mn[c("PlantID","flw_date", "sd_FL")]
fl.sd
# Reshape into long-format matrix
long<- reshape(B.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
sd.fl<-long
fit.1<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
fit.2<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
,family='poisson')
fit.3<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") +
lf.vd(sd.fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
AIC(fit.1, fit.2, fit.3)
summary(fit.2)
summary(fit.3)
summary(fit.2)
fit.2<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
,family='poisson')
fit.2.1<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov) +unlist(flw.no)
,family='poisson')
fit.2.2<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no)
,family='poisson')
fit.2.3<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no) + unlist(flw.no)
,family='poisson')
fit.2.4<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit<- coef(fit.2.4)
fit$x<- fit$banner.arg * fit$banner.vd
fit$x<- fit$fl.arg * fit$fl.vd
fit<- coef(fit.2.4)
fit$x<- fit$fl.arg * fit$fl.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$fl.arg, fit$value, type="l", main="relative")
sd.b.cov
sd.fl.cov
# try sd as a single (i.e., plant-level) covariate
sd.b.cov<- aggregate(data$B, by=list(data$PlantID), sd)
sd.b.cov$Group.1<- NULL
sd.b.cov
#######################
#######################
##### Flower Length####
#######################
# try sd as a single (i.e., plant-level) covariate
sd.fl.cov<- aggregate(data$FL, by=list(data$PlantID), sd)
sd.fl.cov$Group.1<- NULL
sd.fl.cov
# Prepare functional predictors
fl.sd<- mn[c("PlantID","flw_date", "sd_FL")]
# Reshape into long-format matrix
long<- reshape(B.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
sd.fl<-long
fit.1<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
fit.2<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
,family='poisson')
fit.3<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") +
lf.vd(sd.fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
AIC(fit.1, fit.2, fit.3)
summary(fit.2)
fit.2<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
,family='poisson')
fit.2.1<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov) +unlist(flw.no)
,family='poisson')
fit.2.2<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no)
,family='poisson')
fit.2.3<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no) + unlist(flw.no)
,family='poisson')
fit.2.4<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit<- coef(fit.2.4)
fit$x<- fit$fl.arg * fit$fl.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$fl.arg, fit$value, type="l", main="relative")
# Reshape into long-format matrix
long<- reshape(FL.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
# Prepare functional predictors
fl.sd<- mn[c("PlantID","flw_date", "sd_FL")]
# Reshape into long-format matrix
long<- reshape(FL.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
# Reshape into long-format matrix
long<- reshape(fl.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
sd.fl<-long
fit.1<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
fit.2<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
,family='poisson')
fit.3<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") +
lf.vd(sd.fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
AIC(fit.1, fit.2, fit.3)
summary(fit.2)
summary(fit.3)
summary(fit.2)
#######################
#######################
##### Flower Diameter####
#######################
# try sd as a single (i.e., plant-level) covariate
sd.fd.cov<- aggregate(data$FD, by=list(data$PlantID), sd)
sd.fd.cov$Group.1<- NULL
# Prepare functional predictors
fd.sd<- mn[c("PlantID","flw_date", "sd_FD")]
# Reshape into long-format matrix
long<- reshape(fd.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
fit.2<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
,family='poisson')
fit.2.1<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov) +unlist(flw.no)
,family='poisson')
fit.2.2<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+unlist(branch.no)
,family='poisson')
fit.2.3<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+unlist(branch.no) + unlist(flw.no)
,family='poisson')
fit.2.4<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.3)
fit<- coef(fit.2.3)
fit$x<- fit$fd.arg * fit$fd.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$fd.arg, fit$value, type="l", main="relative")
summary(fit.2.4)
fit<- coef(fit.2.4)
fit$x<- fit$fd.arg * fit$fd.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$fd.arg, fit$value, type="l", main="relative")
summary(fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
summary(fit.2.4)
summary(fit.2.4)
summary(fit.2.4)
summary(fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
fit<- coef(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+ unlist(branch.no):unlist(flw.no)
,family='poisson')
summary(fit.2.4)
summary(fit.2.4)
summary(fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+ unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit<- coef(fit.2.3)
fit.2.3<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+unlist(branch.no) + unlist(flw.no)
,family='poisson')
fit.2.4<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+ unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.3)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.b.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
singmorph<- read.csv("C:/Users/Mason Kulbaba/Dropbox/Rscripts/fda-delphinium-inflorescences/data/singlemorph.csv")
singmorph<- read.csv("C:/Users/mason/Dropbox/Rscripts/fda-delphinium-inflorescences/data/singlemorph.csv")
library(refund)
singlelist<- unique(singmorph$New_Plant_ID)
singmorph$New_Ramet<-"NULL"
sin<- reshape(singmorph, timevar="Pos", idvar=c("New_Plant_ID"), direction = "wide")
sin$New_Plant_ID<- NULL
sin<- as.matrix(sin)
flw_sin<- aggregate(singmorph$Pos, by=list(singmorph$New_Plant_ID), max)
flw_sin<- as.vector(flw_sin)
fits.1<- pfr(singleseeds~ lf.vd(sin, vd = flw_sin, basistype="s"), family="poisson")#best
sin<- read.csv("C:/Users/mason/Dropbox/Rscripts/fda-delphinium-inflorescences/data/sing.csv")
sin$ID<- NULL
sin<- as.matrix(sin)
###first ramet of genets that produce more than a single ramet
R1<-read.csv("C:/Users/mason/Dropbox/Rscripts/fda-delphinium-inflorescences/data/R1multi.csv")
R1<- R1[c("New_Plant_ID", "Seedcnt")]
R1[is.na(R1)]<- 0
r1seeds<- aggregate(R1$Seedcnt, by=list(R1$New_Plant_ID), sum)
r1seeds$Group.1<- NULL
#variable domain vector for R1 plants
R1<-read.csv("C:/Users/mason/Dropbox/Rscripts/fda-delphinium-inflorescences/data/R1multi.csv")
R1$flday[is.na(R1$flday)]<-0
fldaysR1<- aggregate(R1$flday, by=list(R1$New_Plant_ID), max)
fldaysR1$Group.1<- NULL
fldaysR1<- as.matrix(fldaysR1)
fldaysR1<- as.vector(fldaysR1)
#anthesis data for R1
r1<- read.csv("C:/Users/mason/Dropbox/Rscripts/fda-delphinium-inflorescences/data/r1.csv")
r1$ID<- NULL
r1<- as.matrix(r1)
flwsin<- aggregate(single$Pos, by=list(single$New_Plant_ID),max)
flwsin$Group.1<-NULL
flwsin<- as.matrix(flwsin)
flwsin<- as.vector(flwsin)
flwr<- aggregate(R1$Pos, by=list(R1$New_Plant_ID), max)
#make data sets of ramets from inlf data
one<- subset(infla, New_Ramet == 1)# 110 genets
two<- subset(infla, New_Ramet == 2)#39 genets
three<- subset(infla, New_Ramet == 3)#24 genets
summary(fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fl.cov)
+unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit.2.4<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
+ unlist(branch.no):unlist(flw.no)
,family='poisson')
AIC(fit.2, fit.2.1, fit.2.2, fit.2.3, fit.2.4)
summary(fit.2.4)
fit.3<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") +
lf.vd(sd.fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
AIC(fit.1, fit.2, fit.3)
summary(fit.3)
fit.3<- pfr(seed ~ lf.vd(fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") +
lf.vd(sd.fl, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
summary(fit.3)
fit.3<- pfr(seed ~ lf.vd(banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") +
lf.vd(sd.banner, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
summary(fit.3)
fit.1<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
fit.2<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
,family='poisson')
fit.3<- pfr(seed ~ lf.vd(fd) +
lf.vd(sd.fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
fd.sd<- mn[c("PlantID","flw_date", "sd_FD")]
# Reshape into long-format matrix
long<- reshape(fd.sd, timevar="flw_date", idvar=c("PlantID"), direction = "wide")
long$PlantID<- NULL
long<- as.matrix(long)
#rename
sd.fd<-long
fit.1<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
fit.2<- pfr(seed ~ lf.vd(fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized") + unlist(sd.fd.cov)
,family='poisson')
fit.3<- pfr(seed ~ lf.vd(fd) +
lf.vd(sd.fd, vd=unlist(flw_day), basistype = "s", bs = "tp", transform = "standardized")
,family='poisson')
AIC(fit.1, fit.2, fit.3)
summary(fit.3)
